Dickinson
  { modImports = []
  , modDefs =
    [ Define
      { declAnn = ()
      , defName = Name
        { name = "greeter" :| []
        , unique = Unique { unUnique = 5 }
        , loc = ()
        }
      , defExpr = Lambda ()
        ( Name
          { name = "name" :| []
          , unique = Unique { unUnique = 7 }
          , loc = ()
          }
        ) TyText
        ( Interp ()
          [ StrChunk () "Hello, "
          , Var ()
            ( Name
              { name = "name" :| []
              , unique = Unique { unUnique = 7 }
              , loc = ()
              }
            )
          , StrChunk () "!"
          ]
        )
      }
    , Define
      { declAnn = ()
      , defName = Name
        { name = "main" :| []
        , unique = Unique { unUnique = 6 }
        , loc = ()
        }
      , defExpr = Let ()
        (
          ( Name
            { name = "boy" :| []
            , unique = Unique { unUnique = 8 }
            , loc = ()
            }
          , Choice ()
            (
              ( 0.5
              , Literal () "tom"
              ) :|
              [
                ( 0.5
                , Literal () "harry"
                )
              ]
            )
          ) :| []
        )
        ( Apply ()
          ( Var ()
            ( Name
              { name = "greeter" :| []
              , unique = Unique { unUnique = 5 }
              , loc = ()
              }
            )
          )
          ( Var ()
            ( Name
              { name = "boy" :| []
              , unique = Unique { unUnique = 8 }
              , loc = ()
              }
            )
          )
        )
      }
    ]
  }