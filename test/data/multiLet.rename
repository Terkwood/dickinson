Dickinson
  { modImports = []
  , modDefs =
    [ Define
      { declAnn = ()
      , defName = Name
        { name = "letBinding" :| []
        , unique = Unique { unUnique = 5 }
        , loc = ()
        }
      , defExpr = Let ()
        (
          ( Name
            { name = "a" :| []
            , unique = Unique { unUnique = 7 }
            , loc = ()
            }
          , Literal () "man"
          ) :|
          [
            ( Name
              { name = "b" :| []
              , unique = Unique { unUnique = 8 }
              , loc = ()
              }
            , Literal () "woman"
            )
          ]
        )
        ( Choice ()
          (
            ( 1.0
            , Var ()
              ( Name
                { name = "a" :| []
                , unique = Unique { unUnique = 7 }
                , loc = ()
                }
              )
            ) :|
            [
              ( 1.0
              , Var ()
                ( Name
                  { name = "b" :| []
                  , unique = Unique { unUnique = 8 }
                  , loc = ()
                  }
                )
              )
            ]
          )
        )
      }
    , Define
      { declAnn = ()
      , defName = Name
        { name = "main" :| []
        , unique = Unique { unUnique = 6 }
        , loc = ()
        }
      , defExpr = Let ()
        (
          ( Name
            { name = "a" :| []
            , unique = Unique { unUnique = 12 }
            , loc = ()
            }
          , Literal () "non-binary"
          ) :| []
        )
        ( Choice ()
          (
            ( 1.0
            , Var ()
              ( Name
                { name = "letBinding" :| []
                , unique = Unique { unUnique = 5 }
                , loc = ()
                }
              )
            ) :|
            [
              ( 1.0
              , Var ()
                ( Name
                  { name = "a" :| []
                  , unique = Unique { unUnique = 12 }
                  , loc = ()
                  }
                )
              )
            ]
          )
        )
      }
    ]
  }