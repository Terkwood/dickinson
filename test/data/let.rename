Dickinson
  { modImports = []
  , modDefs =
    [ Define
      { declAnn = ()
      , defName = Name
        { name = "letBinding" :| []
        , unique = Unique { unUnique = 4 }
        , loc = ()
        }
      , defExpr = Let
        { exprAnn = ()
        , letBinds =
          ( Name
            { name = "a" :| []
            , unique = Unique { unUnique = 5 }
            , loc = ()
            }
          , Literal
            { exprAnn = ()
            , litText = "man"
            }
          ) :|
          [
            ( Name
              { name = "b" :| []
              , unique = Unique { unUnique = 6 }
              , loc = ()
              }
            , Literal
              { exprAnn = ()
              , litText = "woman"
              }
            )
          ]
        , letExpr = Choice
          { exprAnn = ()
          , choices =
            ( 1.0
            , Var
              { exprAnn = ()
              , exprVar = Name
                { name = "a" :| []
                , unique = Unique { unUnique = 5 }
                , loc = ()
                }
              }
            ) :|
            [
              ( 1.0
              , Var
                { exprAnn = ()
                , exprVar = Name
                  { name = "b" :| []
                  , unique = Unique { unUnique = 6 }
                  , loc = ()
                  }
                }
              )
            ]
          }
        }
      }
    ]
  }