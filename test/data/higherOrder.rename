Dickinson
  { modImports = []
  , modDefs =
    [ Define
      { declAnn = ()
      , defName = Name
        { name = "top" :| []
        , unique = Unique { unUnique = 6 }
        , loc = ()
        }
      , defExpr = Lambda ()
        ( Name
          { name = "f" :| []
          , unique = Unique { unUnique = 8 }
          , loc = ()
          }
        ) ( TyFun TyText TyText )
        ( Apply ()
          ( Var ()
            ( Name
              { name = "f" :| []
              , unique = Unique { unUnique = 8 }
              , loc = ()
              }
            )
          ) ( Literal () "me" )
        )
      }
    , Define
      { declAnn = ()
      , defName = Name
        { name = "main" :| []
        , unique = Unique { unUnique = 7 }
        , loc = ()
        }
      , defExpr = Let ()
        (
          ( Name
            { name = "fun" :| []
            , unique = Unique { unUnique = 10 }
            , loc = ()
            }
          , Lambda ()
            ( Name
              { name = "a" :| []
              , unique = Unique { unUnique = 11 }
              , loc = ()
              }
            ) TyText
            ( Interp ()
              [ StrChunk () "It's "
              , Var ()
                ( Name
                  { name = "a" :| []
                  , unique = Unique { unUnique = 11 }
                  , loc = ()
                  }
                )
              ]
            )
          ) :| []
        )
        ( Apply ()
          ( Var ()
            ( Name
              { name = "top" :| []
              , unique = Unique { unUnique = 6 }
              , loc = ()
              }
            )
          )
          ( Var ()
            ( Name
              { name = "fun" :| []
              , unique = Unique { unUnique = 10 }
              , loc = ()
              }
            )
          )
        )
      }
    ]
  }