Dickinson
  { modImports = []
  , modDefs =
    [ Define
      { declAnn = ()
      , defName = Name
        { name = "fst" :| []
        , unique = Unique { unUnique = 11 }
        , loc = ()
        }
      , defExpr = Lambda ()
        ( Name
          { name = "xy" :| []
          , unique = Unique { unUnique = 15 }
          , loc = ()
          }
        )
        ( TyTuple
          ( TyText :| [ TyText ] )
        )
        ( Match ()
          ( Var ()
            ( Name
              { name = "xy" :| []
              , unique = Unique { unUnique = 15 }
              , loc = ()
              }
            )
          )
          ( PatternTuple ()
            ( PatternVar ()
              ( Name
                { name = "x" :| []
                , unique = Unique { unUnique = 16 }
                , loc = ()
                }
              ) :| [ Wildcard () ]
            )
          )
          ( Var ()
            ( Name
              { name = "x" :| []
              , unique = Unique { unUnique = 16 }
              , loc = ()
              }
            )
          )
        )
      }
    , Define
      { declAnn = ()
      , defName = Name
        { name = "snd" :| []
        , unique = Unique { unUnique = 12 }
        , loc = ()
        }
      , defExpr = Lambda ()
        ( Name
          { name = "xy" :| []
          , unique = Unique { unUnique = 17 }
          , loc = ()
          }
        )
        ( TyTuple
          ( TyText :| [ TyText ] )
        )
        ( Match ()
          ( Var ()
            ( Name
              { name = "xy" :| []
              , unique = Unique { unUnique = 17 }
              , loc = ()
              }
            )
          )
          ( PatternTuple ()
            ( Wildcard () :|
              [ PatternVar ()
                ( Name
                  { name = "y" :| []
                  , unique = Unique { unUnique = 18 }
                  , loc = ()
                  }
                )
              ]
            )
          )
          ( Var ()
            ( Name
              { name = "y" :| []
              , unique = Unique { unUnique = 18 }
              , loc = ()
              }
            )
          )
        )
      }
    , Define
      { declAnn = ()
      , defName = Name
        { name = "greeter" :| []
        , unique = Unique { unUnique = 13 }
        , loc = ()
        }
      , defExpr = Lambda ()
        ( Name
          { name = "dog" :| []
          , unique = Unique { unUnique = 19 }
          , loc = ()
          }
        )
        ( TyTuple
          ( TyText :| [ TyText ] )
        )
        ( Let ()
          (
            ( Name
              { name = "name" :| []
              , unique = Unique { unUnique = 20 }
              , loc = ()
              }
            , Apply ()
              ( Var ()
                ( Name
                  { name = "fst" :| []
                  , unique = Unique { unUnique = 11 }
                  , loc = ()
                  }
                )
              )
              ( Var ()
                ( Name
                  { name = "dog" :| []
                  , unique = Unique { unUnique = 19 }
                  , loc = ()
                  }
                )
              )
            ) :|
            [
              ( Name
                { name = "pronoun" :| []
                , unique = Unique { unUnique = 21 }
                , loc = ()
                }
              , Apply ()
                ( Var ()
                  ( Name
                    { name = "snd" :| []
                    , unique = Unique { unUnique = 12 }
                    , loc = ()
                    }
                  )
                )
                ( Var ()
                  ( Name
                    { name = "dog" :| []
                    , unique = Unique { unUnique = 19 }
                    , loc = ()
                    }
                  )
                )
              )
            ]
          )
          ( Choice ()
            (
              ( 0.3333333333333333
              , Interp ()
                [ Var ()
                  ( Name
                    { name = "name" :| []
                    , unique = Unique { unUnique = 20 }
                    , loc = ()
                    }
                  )
                , StrChunk () " is a heckin' fine floofer"
                ]
              ) :|
              [
                ( 0.3333333333333333
                , Interp ()
                  [ Var ()
                    ( Name
                      { name = "name" :| []
                      , unique = Unique { unUnique = 20 }
                      , loc = ()
                      }
                    )
                  , StrChunk () " is a good woofer"
                  ]
                )
              ,
                ( 0.3333333333333333
                , Interp ()
                  [ Var ()
                    ( Name
                      { name = "name" :| []
                      , unique = Unique { unUnique = 20 }
                      , loc = ()
                      }
                    )
                  , StrChunk () " eats toilet paper sometimes but "
                  , Var ()
                    ( Name
                      { name = "pronoun" :| []
                      , unique = Unique { unUnique = 21 }
                      , loc = ()
                      }
                    )
                  , StrChunk () " tries."
                  ]
                )
              ]
            )
          )
        )
      }
    , Define
      { declAnn = ()
      , defName = Name
        { name = "main" :| []
        , unique = Unique { unUnique = 14 }
        , loc = ()
        }
      , defExpr = Apply ()
        ( Var ()
          ( Name
            { name = "greeter" :| []
            , unique = Unique { unUnique = 13 }
            , loc = ()
            }
          )
        )
        ( Tuple ()
          ( Literal () "Maxine" :| [ Literal () "she" ] )
        )
      }
    ]
  }